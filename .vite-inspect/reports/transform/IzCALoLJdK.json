{
  "resolvedId": "D:/code/bili/src/views/HomeView.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-72f2d68c\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"grid h-full grid-cols-5 grid-rows-2 gap-2 p-2\" }\nconst _hoisted_2 = [\"onDrop\"]\nconst _hoisted_3 = [\"onDrop\"]\nconst _hoisted_4 = [\"onDrop\"]\nconst _hoisted_5 = { class: \"col-span-1 row-span-1\" }\nconst _hoisted_6 = [\"onDrop\"]\nconst _hoisted_7 = [\"title\"]\nconst _hoisted_8 = [\"src\", \"alt\"]\nconst _hoisted_9 = [\"src\", \"alt\", \"onDblclick\"]\nconst _hoisted_10 = [\"data-src\", \"onDblclick\"]\nconst _hoisted_11 = { class: \"flex justify-evenly\" }\nconst _hoisted_12 = { class: \"overflow-hidden text-ellipsis whitespace-nowrap\" }\nconst _hoisted_13 = [\"onClick\"]\nconst _hoisted_14 = [\"onDrop\"]\n\nimport MerText from '@/components/MerText.vue'\nimport gsap from 'gsap'\ntype file = File & {\n  url: string\n  file: File\n  typeEasy: string\n  toggetPlay?: (...arg: any[]) => void\n  isPlay: boolean\n}\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\nconst files: file[] = reactive([])\n// 素材管理\nfunction uploadFiles(e: Event) {\n  const uploadFiles = (e.target as HTMLInputElement).files ?? []\n  for (const file of Object.values(uploadFiles)) {\n    if (['image', 'video', 'audio'].includes(file.type.split('/')[0])) {\n      const url = useObjectUrl(file).value!\n      if (url) {\n        // @ts-ignore\n        let temp: file = {\n          arrayBuffer: file.arrayBuffer,\n          lastModified: file.lastModified,\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          webkitRelativePath: file.webkitRelativePath,\n          slice: file.slice,\n          stream: file.stream,\n          text: file.text,\n          file: file,\n          isPlay: false,\n          url,\n          typeEasy: file.type.split('/')[0],\n        }\n        if (temp.typeEasy === 'video')\n          temp.toggetPlay = function (e: HTMLVideoElement) {\n            if (this.isPlay) {\n              e.pause()\n            } else {\n              e.play()\n            }\n            this.isPlay = !this.isPlay\n          }\n        files.push(temp)\n      }\n    }\n  }\n}\nfunction cleanFiles(e: MouseEvent) {\n  ;(e.target as HTMLInputElement).value = ''\n}\nconst audioContaier: Ref<HTMLElement[]> = ref([])\nfunction delFile(src: string) {\n  files.splice(\n    files.findIndex((e) => e.url === src),\n    1\n  )\n}\n// 文件上传框动画\nconst inputFile: Ref<HTMLElement | null> = ref(null)\nonMounted(() => {\n  gsap.fromTo(\n    inputFile.value,\n    {\n      width: 0,\n      opacity: 0,\n      overflow: 'hidden'\n    },\n    {\n      ease: 'power1.inOut',\n      delay: 0.5,\n      duration: 1.5,\n      width: '100%',\n      opacity: 1,\n      overflow: 'visible'\n    }\n  )\n})\nlet element: HTMLElement | null = null\nfunction dragstart(e: DragEvent) {\n  if (e.dataTransfer) {\n    e.dataTransfer.dropEffect = 'move'\n  }\n  element = e.target as HTMLElement\n}\nfunction drop(e: DragEvent) {\n  if (element) {\n    ;(e.currentTarget as HTMLElement).append(element)\n    element = null\n  }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"main\", _hoisted_1, [\n    _createElementVNode(\"section\", {\n      class: \"col-span-2 row-span-1\",\n      onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n      onDrop: _withModifiers(drop, [\"prevent\"])\n    }, [\n      _createElementVNode(\"header\", null, [\n        _createVNode(MerText, { content: \"属性设置\" })\n      ])\n    ], 40, _hoisted_2),\n    _createElementVNode(\"section\", {\n      class: \"col-span-2 row-span-1\",\n      onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n      onDrop: _withModifiers(drop, [\"prevent\"])\n    }, [\n      _createElementVNode(\"header\", null, [\n        _createVNode(MerText, { content: \"预览窗口\" })\n      ])\n    ], 40, _hoisted_3),\n    _createElementVNode(\"section\", {\n      class: \"col-span-1 row-span-2\",\n      onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n      onDrop: _withModifiers(drop, [\"prevent\"])\n    }, [\n      _createElementVNode(\"header\", null, [\n        _createVNode(MerText, { content: \"效果面板\" })\n      ])\n    ], 40, _hoisted_4),\n    _createElementVNode(\"section\", _hoisted_5, [\n      _createElementVNode(\"header\", null, [\n        _createVNode(MerText, { content: \"素材管理\" })\n      ]),\n      _createElementVNode(\"div\", {\n        ref_key: \"inputFile\",\n        ref: inputFile\n      }, [\n        _createElementVNode(\"input\", {\n          type: \"file\",\n          accept: \"image/*,video/*,audio/*\",\n          multiple: \"\",\n          onChange: uploadFiles,\n          onClick: cleanFiles,\n          class: \"block w-full rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm text-gray-600 placeholder-gray-400/70 file:rounded-full file:border-none file:bg-gray-200 file:px-4 file:py-1 file:text-sm file:text-gray-700 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:placeholder-gray-500 dark:file:bg-gray-800 dark:file:text-gray-200 dark:focus:border-blue-300\"\n        }, null, 32)\n      ], 512),\n      _createElementVNode(\"div\", {\n        class: \"grid grid-cols-[repeat(auto-fit,minmax(80px,1fr))] gap-4 overflow-auto rounded-lg\",\n        onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"])),\n        onDrop: _withModifiers(drop, [\"prevent\"])\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(files), (file) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: file.url,\n            class: \"flex flex-col\",\n            title: file.name,\n            draggable: \"true\",\n            onDragstart: dragstart\n          }, [\n            (file.typeEasy === 'image')\n              ? (_openBlock(), _createElementBlock(\"img\", {\n                  key: 0,\n                  draggable: \"false\",\n                  src: file.url,\n                  alt: file.name,\n                  class: \"w-full flex-1 rounded-lg object-cover\"\n                }, null, 8, _hoisted_8))\n              : _createCommentVNode(\"\", true),\n            (file.typeEasy === 'video')\n              ? (_openBlock(), _createElementBlock(\"video\", {\n                  key: 1,\n                  src: file.url,\n                  alt: file.name,\n                  preload: \"metadata\",\n                  class: \"w-full flex-1 rounded-lg object-cover\",\n                  onDblclick: ($event: any) => (file.toggetPlay?.($event.target))\n                }, null, 40, _hoisted_9))\n              : _createCommentVNode(\"\", true),\n            (file.typeEasy === 'audio')\n              ? (_openBlock(), _createElementBlock(\"div\", {\n                  key: 2,\n                  class: \"flex w-full flex-1 flex-col justify-center rounded-lg\",\n                  \"data-src\": file.url,\n                  ref_for: true,\n                  ref_key: \"audioContaier\",\n                  ref: audioContaier,\n                  onDblclick: ($event: any) => (file.toggetPlay?.())\n                }, null, 40, _hoisted_10))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"div\", _hoisted_11, [\n              _createElementVNode(\"div\", _hoisted_12, [\n                _createVNode(MerText, {\n                  content: file.name\n                }, null, 8, [\"content\"])\n              ]),\n              _createElementVNode(\"button\", {\n                onClick: ($event: any) => (delFile(file.url)),\n                class: \"whitespace-nowrap text-blue-400\"\n              }, [\n                _createVNode(MerText, { content: \"删除\" })\n              ], 8, _hoisted_13)\n            ])\n          ], 40, _hoisted_7))\n        }), 128))\n      ], 40, _hoisted_6)\n    ]),\n    _createElementVNode(\"section\", {\n      class: \"col-span-3 row-span-1\",\n      onDragover: _cache[4] || (_cache[4] = _withModifiers(() => {}, [\"prevent\"])),\n      onDrop: _withModifiers(drop, [\"prevent\"])\n    }, [\n      _createElementVNode(\"header\", null, [\n        _createVNode(MerText, { content: \"时间线\" })\n      ])\n    ], 40, _hoisted_14)\n  ]))\n}\n}\n\n})",
      "start": 1683377255167,
      "end": 1683377255167
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-72f2d68c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"grid h-full grid-cols-5 grid-rows-2 gap-2 p-2\" };\nconst _hoisted_2 = [\"onDrop\"];\nconst _hoisted_3 = [\"onDrop\"];\nconst _hoisted_4 = [\"onDrop\"];\nconst _hoisted_5 = { class: \"col-span-1 row-span-1\" };\nconst _hoisted_6 = [\"onDrop\"];\nconst _hoisted_7 = [\"title\"];\nconst _hoisted_8 = [\"src\", \"alt\"];\nconst _hoisted_9 = [\"src\", \"alt\", \"onDblclick\"];\nconst _hoisted_10 = [\"data-src\", \"onDblclick\"];\nconst _hoisted_11 = { class: \"flex justify-evenly\" };\nconst _hoisted_12 = { class: \"overflow-hidden text-ellipsis whitespace-nowrap\" };\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onDrop\"];\nimport MerText from \"@/components/MerText.vue\";\nimport gsap from \"gsap\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"HomeView\",\n  setup(__props) {\n    const files = reactive([]);\n    function uploadFiles(e) {\n      const uploadFiles2 = e.target.files ?? [];\n      for (const file of Object.values(uploadFiles2)) {\n        if ([\"image\", \"video\", \"audio\"].includes(file.type.split(\"/\")[0])) {\n          const url = useObjectUrl(file).value;\n          if (url) {\n            let temp = {\n              arrayBuffer: file.arrayBuffer,\n              lastModified: file.lastModified,\n              name: file.name,\n              size: file.size,\n              type: file.type,\n              webkitRelativePath: file.webkitRelativePath,\n              slice: file.slice,\n              stream: file.stream,\n              text: file.text,\n              file,\n              isPlay: false,\n              url,\n              typeEasy: file.type.split(\"/\")[0]\n            };\n            if (temp.typeEasy === \"video\")\n              temp.toggetPlay = function(e2) {\n                if (this.isPlay) {\n                  e2.pause();\n                } else {\n                  e2.play();\n                }\n                this.isPlay = !this.isPlay;\n              };\n            files.push(temp);\n          }\n        }\n      }\n    }\n    function cleanFiles(e) {\n      ;\n      e.target.value = \"\";\n    }\n    const audioContaier = ref([]);\n    function delFile(src) {\n      files.splice(\n        files.findIndex((e) => e.url === src),\n        1\n      );\n    }\n    const inputFile = ref(null);\n    onMounted(() => {\n      gsap.fromTo(\n        inputFile.value,\n        {\n          width: 0,\n          opacity: 0,\n          overflow: \"hidden\"\n        },\n        {\n          ease: \"power1.inOut\",\n          delay: 0.5,\n          duration: 1.5,\n          width: \"100%\",\n          opacity: 1,\n          overflow: \"visible\"\n        }\n      );\n    });\n    let element = null;\n    function dragstart(e) {\n      if (e.dataTransfer) {\n        e.dataTransfer.dropEffect = \"move\";\n      }\n      element = e.target;\n    }\n    function drop(e) {\n      if (element) {\n        ;\n        e.currentTarget.append(element);\n        element = null;\n      }\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [\n        _createElementVNode(\"section\", {\n          class: \"col-span-2 row-span-1\",\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"属性设置\" })\n          ])\n        ], 40, _hoisted_2),\n        _createElementVNode(\"section\", {\n          class: \"col-span-2 row-span-1\",\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"预览窗口\" })\n          ])\n        ], 40, _hoisted_3),\n        _createElementVNode(\"section\", {\n          class: \"col-span-1 row-span-2\",\n          onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"效果面板\" })\n          ])\n        ], 40, _hoisted_4),\n        _createElementVNode(\"section\", _hoisted_5, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"素材管理\" })\n          ]),\n          _createElementVNode(\"div\", {\n            ref_key: \"inputFile\",\n            ref: inputFile\n          }, [\n            _createElementVNode(\"input\", {\n              type: \"file\",\n              accept: \"image/*,video/*,audio/*\",\n              multiple: \"\",\n              onChange: uploadFiles,\n              onClick: cleanFiles,\n              class: \"block w-full rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm text-gray-600 placeholder-gray-400/70 file:rounded-full file:border-none file:bg-gray-200 file:px-4 file:py-1 file:text-sm file:text-gray-700 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:placeholder-gray-500 dark:file:bg-gray-800 dark:file:text-gray-200 dark:focus:border-blue-300\"\n            }, null, 32)\n          ], 512),\n          _createElementVNode(\"div\", {\n            class: \"grid grid-cols-[repeat(auto-fit,minmax(80px,1fr))] gap-4 overflow-auto rounded-lg\",\n            onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {\n            }, [\"prevent\"])),\n            onDrop: _withModifiers(drop, [\"prevent\"])\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(files), (file) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: file.url,\n                class: \"flex flex-col\",\n                title: file.name,\n                draggable: \"true\",\n                onDragstart: dragstart\n              }, [\n                file.typeEasy === \"image\" ? (_openBlock(), _createElementBlock(\"img\", {\n                  key: 0,\n                  draggable: \"false\",\n                  src: file.url,\n                  alt: file.name,\n                  class: \"w-full flex-1 rounded-lg object-cover\"\n                }, null, 8, _hoisted_8)) : _createCommentVNode(\"\", true),\n                file.typeEasy === \"video\" ? (_openBlock(), _createElementBlock(\"video\", {\n                  key: 1,\n                  src: file.url,\n                  alt: file.name,\n                  preload: \"metadata\",\n                  class: \"w-full flex-1 rounded-lg object-cover\",\n                  onDblclick: ($event) => file.toggetPlay?.($event.target)\n                }, null, 40, _hoisted_9)) : _createCommentVNode(\"\", true),\n                file.typeEasy === \"audio\" ? (_openBlock(), _createElementBlock(\"div\", {\n                  key: 2,\n                  class: \"flex w-full flex-1 flex-col justify-center rounded-lg\",\n                  \"data-src\": file.url,\n                  ref_for: true,\n                  ref_key: \"audioContaier\",\n                  ref: audioContaier,\n                  onDblclick: ($event) => file.toggetPlay?.()\n                }, null, 40, _hoisted_10)) : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"div\", _hoisted_12, [\n                    _createVNode(MerText, {\n                      content: file.name\n                    }, null, 8, [\"content\"])\n                  ]),\n                  _createElementVNode(\"button\", {\n                    onClick: ($event) => delFile(file.url),\n                    class: \"whitespace-nowrap text-blue-400\"\n                  }, [\n                    _createVNode(MerText, { content: \"删除\" })\n                  ], 8, _hoisted_13)\n                ])\n              ], 40, _hoisted_7);\n            }), 128))\n          ], 40, _hoisted_6)\n        ]),\n        _createElementVNode(\"section\", {\n          class: \"col-span-3 row-span-1\",\n          onDragover: _cache[4] || (_cache[4] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"时间线\" })\n          ])\n        ], 40, _hoisted_14)\n      ]);\n    };\n  }\n});\n",
      "start": 1683377255170,
      "end": 1683377255328,
      "order": "normal"
    },
    {
      "name": "unplugin-auto-import",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-72f2d68c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"grid h-full grid-cols-5 grid-rows-2 gap-2 p-2\" };\nconst _hoisted_2 = [\"onDrop\"];\nconst _hoisted_3 = [\"onDrop\"];\nconst _hoisted_4 = [\"onDrop\"];\nconst _hoisted_5 = { class: \"col-span-1 row-span-1\" };\nconst _hoisted_6 = [\"onDrop\"];\nconst _hoisted_7 = [\"title\"];\nconst _hoisted_8 = [\"src\", \"alt\"];\nconst _hoisted_9 = [\"src\", \"alt\", \"onDblclick\"];\nconst _hoisted_10 = [\"data-src\", \"onDblclick\"];\nconst _hoisted_11 = { class: \"flex justify-evenly\" };\nconst _hoisted_12 = { class: \"overflow-hidden text-ellipsis whitespace-nowrap\" };\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onDrop\"];\nimport MerText from \"@/components/MerText.vue\";\nimport gsap from \"gsap\";\n\nimport { reactive, ref, onMounted } from 'vue';\nimport { useObjectUrl } from '@vueuse/core';\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"HomeView\",\n  setup(__props) {\n    const files = reactive([]);\n    function uploadFiles(e) {\n      const uploadFiles2 = e.target.files ?? [];\n      for (const file of Object.values(uploadFiles2)) {\n        if ([\"image\", \"video\", \"audio\"].includes(file.type.split(\"/\")[0])) {\n          const url = useObjectUrl(file).value;\n          if (url) {\n            let temp = {\n              arrayBuffer: file.arrayBuffer,\n              lastModified: file.lastModified,\n              name: file.name,\n              size: file.size,\n              type: file.type,\n              webkitRelativePath: file.webkitRelativePath,\n              slice: file.slice,\n              stream: file.stream,\n              text: file.text,\n              file,\n              isPlay: false,\n              url,\n              typeEasy: file.type.split(\"/\")[0]\n            };\n            if (temp.typeEasy === \"video\")\n              temp.toggetPlay = function(e2) {\n                if (this.isPlay) {\n                  e2.pause();\n                } else {\n                  e2.play();\n                }\n                this.isPlay = !this.isPlay;\n              };\n            files.push(temp);\n          }\n        }\n      }\n    }\n    function cleanFiles(e) {\n      ;\n      e.target.value = \"\";\n    }\n    const audioContaier = ref([]);\n    function delFile(src) {\n      files.splice(\n        files.findIndex((e) => e.url === src),\n        1\n      );\n    }\n    const inputFile = ref(null);\n    onMounted(() => {\n      gsap.fromTo(\n        inputFile.value,\n        {\n          width: 0,\n          opacity: 0,\n          overflow: \"hidden\"\n        },\n        {\n          ease: \"power1.inOut\",\n          delay: 0.5,\n          duration: 1.5,\n          width: \"100%\",\n          opacity: 1,\n          overflow: \"visible\"\n        }\n      );\n    });\n    let element = null;\n    function dragstart(e) {\n      if (e.dataTransfer) {\n        e.dataTransfer.dropEffect = \"move\";\n      }\n      element = e.target;\n    }\n    function drop(e) {\n      if (element) {\n        ;\n        e.currentTarget.append(element);\n        element = null;\n      }\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [\n        _createElementVNode(\"section\", {\n          class: \"col-span-2 row-span-1\",\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"属性设置\" })\n          ])\n        ], 40, _hoisted_2),\n        _createElementVNode(\"section\", {\n          class: \"col-span-2 row-span-1\",\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"预览窗口\" })\n          ])\n        ], 40, _hoisted_3),\n        _createElementVNode(\"section\", {\n          class: \"col-span-1 row-span-2\",\n          onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"效果面板\" })\n          ])\n        ], 40, _hoisted_4),\n        _createElementVNode(\"section\", _hoisted_5, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"素材管理\" })\n          ]),\n          _createElementVNode(\"div\", {\n            ref_key: \"inputFile\",\n            ref: inputFile\n          }, [\n            _createElementVNode(\"input\", {\n              type: \"file\",\n              accept: \"image/*,video/*,audio/*\",\n              multiple: \"\",\n              onChange: uploadFiles,\n              onClick: cleanFiles,\n              class: \"block w-full rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm text-gray-600 placeholder-gray-400/70 file:rounded-full file:border-none file:bg-gray-200 file:px-4 file:py-1 file:text-sm file:text-gray-700 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:placeholder-gray-500 dark:file:bg-gray-800 dark:file:text-gray-200 dark:focus:border-blue-300\"\n            }, null, 32)\n          ], 512),\n          _createElementVNode(\"div\", {\n            class: \"grid grid-cols-[repeat(auto-fit,minmax(80px,1fr))] gap-4 overflow-auto rounded-lg\",\n            onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {\n            }, [\"prevent\"])),\n            onDrop: _withModifiers(drop, [\"prevent\"])\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(files), (file) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: file.url,\n                class: \"flex flex-col\",\n                title: file.name,\n                draggable: \"true\",\n                onDragstart: dragstart\n              }, [\n                file.typeEasy === \"image\" ? (_openBlock(), _createElementBlock(\"img\", {\n                  key: 0,\n                  draggable: \"false\",\n                  src: file.url,\n                  alt: file.name,\n                  class: \"w-full flex-1 rounded-lg object-cover\"\n                }, null, 8, _hoisted_8)) : _createCommentVNode(\"\", true),\n                file.typeEasy === \"video\" ? (_openBlock(), _createElementBlock(\"video\", {\n                  key: 1,\n                  src: file.url,\n                  alt: file.name,\n                  preload: \"metadata\",\n                  class: \"w-full flex-1 rounded-lg object-cover\",\n                  onDblclick: ($event) => file.toggetPlay?.($event.target)\n                }, null, 40, _hoisted_9)) : _createCommentVNode(\"\", true),\n                file.typeEasy === \"audio\" ? (_openBlock(), _createElementBlock(\"div\", {\n                  key: 2,\n                  class: \"flex w-full flex-1 flex-col justify-center rounded-lg\",\n                  \"data-src\": file.url,\n                  ref_for: true,\n                  ref_key: \"audioContaier\",\n                  ref: audioContaier,\n                  onDblclick: ($event) => file.toggetPlay?.()\n                }, null, 40, _hoisted_10)) : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"div\", _hoisted_12, [\n                    _createVNode(MerText, {\n                      content: file.name\n                    }, null, 8, [\"content\"])\n                  ]),\n                  _createElementVNode(\"button\", {\n                    onClick: ($event) => delFile(file.url),\n                    class: \"whitespace-nowrap text-blue-400\"\n                  }, [\n                    _createVNode(MerText, { content: \"删除\" })\n                  ], 8, _hoisted_13)\n                ])\n              ], 40, _hoisted_7);\n            }), 128))\n          ], 40, _hoisted_6)\n        ]),\n        _createElementVNode(\"section\", {\n          class: \"col-span-3 row-span-1\",\n          onDragover: _cache[4] || (_cache[4] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"时间线\" })\n          ])\n        ], 40, _hoisted_14)\n      ]);\n    };\n  }\n});\n",
      "start": 1683377255329,
      "end": 1683377255336,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "result": "/* unplugin-vue-components disabled */import { defineComponent as _defineComponent } from \"vue\";\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-72f2d68c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"grid h-full grid-cols-5 grid-rows-2 gap-2 p-2\" };\nconst _hoisted_2 = [\"onDrop\"];\nconst _hoisted_3 = [\"onDrop\"];\nconst _hoisted_4 = [\"onDrop\"];\nconst _hoisted_5 = { class: \"col-span-1 row-span-1\" };\nconst _hoisted_6 = [\"onDrop\"];\nconst _hoisted_7 = [\"title\"];\nconst _hoisted_8 = [\"src\", \"alt\"];\nconst _hoisted_9 = [\"src\", \"alt\", \"onDblclick\"];\nconst _hoisted_10 = [\"data-src\", \"onDblclick\"];\nconst _hoisted_11 = { class: \"flex justify-evenly\" };\nconst _hoisted_12 = { class: \"overflow-hidden text-ellipsis whitespace-nowrap\" };\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onDrop\"];\nimport MerText from \"@/components/MerText.vue\";\nimport gsap from \"gsap\";\n\nimport { reactive, ref, onMounted } from 'vue';\nimport { useObjectUrl } from '@vueuse/core';\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"HomeView\",\n  setup(__props) {\n    const files = reactive([]);\n    function uploadFiles(e) {\n      const uploadFiles2 = e.target.files ?? [];\n      for (const file of Object.values(uploadFiles2)) {\n        if ([\"image\", \"video\", \"audio\"].includes(file.type.split(\"/\")[0])) {\n          const url = useObjectUrl(file).value;\n          if (url) {\n            let temp = {\n              arrayBuffer: file.arrayBuffer,\n              lastModified: file.lastModified,\n              name: file.name,\n              size: file.size,\n              type: file.type,\n              webkitRelativePath: file.webkitRelativePath,\n              slice: file.slice,\n              stream: file.stream,\n              text: file.text,\n              file,\n              isPlay: false,\n              url,\n              typeEasy: file.type.split(\"/\")[0]\n            };\n            if (temp.typeEasy === \"video\")\n              temp.toggetPlay = function(e2) {\n                if (this.isPlay) {\n                  e2.pause();\n                } else {\n                  e2.play();\n                }\n                this.isPlay = !this.isPlay;\n              };\n            files.push(temp);\n          }\n        }\n      }\n    }\n    function cleanFiles(e) {\n      ;\n      e.target.value = \"\";\n    }\n    const audioContaier = ref([]);\n    function delFile(src) {\n      files.splice(\n        files.findIndex((e) => e.url === src),\n        1\n      );\n    }\n    const inputFile = ref(null);\n    onMounted(() => {\n      gsap.fromTo(\n        inputFile.value,\n        {\n          width: 0,\n          opacity: 0,\n          overflow: \"hidden\"\n        },\n        {\n          ease: \"power1.inOut\",\n          delay: 0.5,\n          duration: 1.5,\n          width: \"100%\",\n          opacity: 1,\n          overflow: \"visible\"\n        }\n      );\n    });\n    let element = null;\n    function dragstart(e) {\n      if (e.dataTransfer) {\n        e.dataTransfer.dropEffect = \"move\";\n      }\n      element = e.target;\n    }\n    function drop(e) {\n      if (element) {\n        ;\n        e.currentTarget.append(element);\n        element = null;\n      }\n    }\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [\n        _createElementVNode(\"section\", {\n          class: \"col-span-2 row-span-1\",\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"属性设置\" })\n          ])\n        ], 40, _hoisted_2),\n        _createElementVNode(\"section\", {\n          class: \"col-span-2 row-span-1\",\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"预览窗口\" })\n          ])\n        ], 40, _hoisted_3),\n        _createElementVNode(\"section\", {\n          class: \"col-span-1 row-span-2\",\n          onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"效果面板\" })\n          ])\n        ], 40, _hoisted_4),\n        _createElementVNode(\"section\", _hoisted_5, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"素材管理\" })\n          ]),\n          _createElementVNode(\"div\", {\n            ref_key: \"inputFile\",\n            ref: inputFile\n          }, [\n            _createElementVNode(\"input\", {\n              type: \"file\",\n              accept: \"image/*,video/*,audio/*\",\n              multiple: \"\",\n              onChange: uploadFiles,\n              onClick: cleanFiles,\n              class: \"block w-full rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm text-gray-600 placeholder-gray-400/70 file:rounded-full file:border-none file:bg-gray-200 file:px-4 file:py-1 file:text-sm file:text-gray-700 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:placeholder-gray-500 dark:file:bg-gray-800 dark:file:text-gray-200 dark:focus:border-blue-300\"\n            }, null, 32)\n          ], 512),\n          _createElementVNode(\"div\", {\n            class: \"grid grid-cols-[repeat(auto-fit,minmax(80px,1fr))] gap-4 overflow-auto rounded-lg\",\n            onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {\n            }, [\"prevent\"])),\n            onDrop: _withModifiers(drop, [\"prevent\"])\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(files), (file) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: file.url,\n                class: \"flex flex-col\",\n                title: file.name,\n                draggable: \"true\",\n                onDragstart: dragstart\n              }, [\n                file.typeEasy === \"image\" ? (_openBlock(), _createElementBlock(\"img\", {\n                  key: 0,\n                  draggable: \"false\",\n                  src: file.url,\n                  alt: file.name,\n                  class: \"w-full flex-1 rounded-lg object-cover\"\n                }, null, 8, _hoisted_8)) : _createCommentVNode(\"\", true),\n                file.typeEasy === \"video\" ? (_openBlock(), _createElementBlock(\"video\", {\n                  key: 1,\n                  src: file.url,\n                  alt: file.name,\n                  preload: \"metadata\",\n                  class: \"w-full flex-1 rounded-lg object-cover\",\n                  onDblclick: ($event) => file.toggetPlay?.($event.target)\n                }, null, 40, _hoisted_9)) : _createCommentVNode(\"\", true),\n                file.typeEasy === \"audio\" ? (_openBlock(), _createElementBlock(\"div\", {\n                  key: 2,\n                  class: \"flex w-full flex-1 flex-col justify-center rounded-lg\",\n                  \"data-src\": file.url,\n                  ref_for: true,\n                  ref_key: \"audioContaier\",\n                  ref: audioContaier,\n                  onDblclick: ($event) => file.toggetPlay?.()\n                }, null, 40, _hoisted_10)) : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"div\", _hoisted_12, [\n                    _createVNode(MerText, {\n                      content: file.name\n                    }, null, 8, [\"content\"])\n                  ]),\n                  _createElementVNode(\"button\", {\n                    onClick: ($event) => delFile(file.url),\n                    class: \"whitespace-nowrap text-blue-400\"\n                  }, [\n                    _createVNode(MerText, { content: \"删除\" })\n                  ], 8, _hoisted_13)\n                ])\n              ], 40, _hoisted_7);\n            }), 128))\n          ], 40, _hoisted_6)\n        ]),\n        _createElementVNode(\"section\", {\n          class: \"col-span-3 row-span-1\",\n          onDragover: _cache[4] || (_cache[4] = _withModifiers(() => {\n          }, [\"prevent\"])),\n          onDrop: _withModifiers(drop, [\"prevent\"])\n        }, [\n          _createElementVNode(\"header\", null, [\n            _createVNode(MerText, { content: \"时间线\" })\n          ])\n        ], 40, _hoisted_14)\n      ]);\n    };\n  }\n});\n",
      "start": 1683377255336,
      "end": 1683377255339,
      "order": "post"
    }
  ]
}
